{"version":3,"sources":["component/Header/Header.js","component/Footer/Footer.js","component/Home/HowItWorks/HowItWorks.js","component/Home/DownloadLink/DownloadLink.js","component/Home/ExperienceSlider/SliderItems/SliderItem.js","component/Home/ExperienceSlider/ExperienceSlider.js","component/Home/HomeSlider/HomeSlider.js","component/Home/Home.js","store/action/partyAction.js","store/actionConstant.js","App.js","serviceWorker.js","store/reducer/partyReducer.js","store/reducer/index.js","store/configureStore.js","index.js"],"names":["Header","className","Component","Footer","Fragment","HowItWorks","props","DownloadLink","src","process","alt","SliderItem","highLights","data","reduce","str","item","index","arr","length","imgUrl","name","moment","createdOn","format","location","requestedBy","price","ExperienceSlider","showMoreLength","time","title","map","key","HomeSlider","classes","Home","this","setExperienceData","allExperience","popularExperience","recommendedExperience","type","connect","state","partyReducer","dispatch","payload","concat","App","path","exact","strict","render","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","initialState","action","rootReducer","combineReducers","configureStore","createStore","applyMiddleware","thunk","logger","ReactDOM","store","basename","document","getElementById","URL","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.0e503278.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport 'src/component/Header/Header.scss';\n\nclass Header extends Component {\n\n    render() {\n        return (\n            <div className=\"header\">\n                <div className=\"logo\">\n                    myscoot\n                </div>\n                <div>\n                    Start hosting\n                </div>\n                <div>\n                    About\n                </div>\n                <div>\n                    Sign up\n                </div>\n                <div className=\"login\">\n                    Login\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Header;\n","import React, {Component} from 'react';\nimport 'src/component/Footer/Footer.scss';\n\nclass Footer extends Component {\n\n    render() {\n        return (\n            <React.Fragment>\n                <div className=\"blank-space\"></div>\n                <div className=\"footer\">\n                    <div className=\"footer-msg\">\n                        Get exclusive invites with verified MyScoot account\n                    </div>\n                    <div className=\"sign-up\">\n                        <button className=\"btn-signup\">Sign up</button>\n                    </div>\n                    <div className=\"login\">\n                        <button className=\"btn-login\">Login</button>\n\n                    </div>\n                </div>\n            </React.Fragment>\n            \n\n        );\n    }\n}\n\nexport default Footer;","import React, {Component} from 'react';\nimport './HowItWorks.scss';\n\nconst HowItWorks = (props) => {\n\n    return (\n        <div className=\"hiw-container\">\n            <div className=\"title\">\n                <h1>How it works</h1>\n            </div>\n            <div></div>\n            <div className=\"hiw-box\">\n                <i className=\"material-icons icon\">message</i>\n                <h3>1. Send Your Interest</h3>\n                <p>It's free! Send your interest to the event host before seats for the event sell out.</p>\n            </div>\n            <div className=\"hiw-box\">\n                <i className=\"material-icons icon\">contact_mail</i>\n                <h3>2. Get Selected</h3>\n                <p>If the accepts your invite, you will recieve an email to purchase your tickets.</p>\n            </div>\n            <div className=\"hiw-box\">\n                <i className=\"material-icons icon\">apartment</i>\n                <h3>3. Reserve Your Spot</h3>\n                <p>It's free! Send your interest to the event host before seats for the event sell out.</p>\n            </div>\n            <div></div>\n        </div>\n\n    );\n}\n\nexport default HowItWorks;","import React from 'react';\nimport './DownloadLink.scss';\n\nconst DownloadLink = () => {\n    return (\n        <div className=\"link-container\">\n            <div className=\"store-link\">\n                <h1>Download our mobile app and never miss out</h1>\n                <p>Get the app</p>\n                <div className=\"img-container\">\n                <img src={process.env.PUBLIC_URL + '/ios.png'} className=\"img\" alt=\"ios\"/>\n                <img src={process.env.PUBLIC_URL + '/andriod.jpeg'} className=\"img\" alt=\"ios\"/>\n                </div>\n                \n            </div>\n            <div className=\"app-snapshot\">\n                <img src={process.env.PUBLIC_URL + '/app-snapshot.png'} className=\"img\" alt=\"ios\"/>\n            </div>\n        </div>\n    );\n}\n\nexport default DownloadLink;","import React from 'react';\nimport moment from \"moment\";\nimport './SliderItem.scss';\n\nconst SliderItem = (props) => {\n    const highLights = props.data.highLights.reduce((str, item, index, arr) => {\n        return index === arr.length -1 ? str + item : str + item + ' | ';\n    }, '');\n    return (\n        <div className=\"items\">\n            <img src={process.env.PUBLIC_URL + '/' + props.data.imgUrl} className=\"img\" alt={props.data.name}></img>\n            <div className=\"details\">\n                <div>\n                    <p>{moment(props.data.createdOn).format('ddd DD MMM')} | {props.data.location}</p>\n                    <div className=\"img-details\">\n                        <div>\n                            <img src={process.env.PUBLIC_URL + '/u1.jpeg'} className=\"img-icon\"></img>\n                        </div>\n                        <div className=\"border-bottom\">\n                            <div><small>Requested by {props.data.requestedBy}</small></div>\n                            <div className=\"name\">My Scoot Movie Night</div>\n                            <div><small>Highlights {highLights}</small></div>\n                        </div>\n                    </div>\n                    <div className=\"img-details\">\n                        <div>\n                            <img src={process.env.PUBLIC_URL + '/u2.png'} className=\"img-icon\"></img>\n                        </div>\n                        <div>\n                            <div><small>Requested invite for free</small></div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"price\">{props.data.price}</div>\n            </div>\n            \n        </div>\n    );\n}\n\nexport default SliderItem;","import React from 'react';\nimport './ExperienceSlider.scss';\nimport SliderItem from './SliderItems/SliderItem';\n\n\nconst ExperienceSlider = (props) => {\n    let showMoreLength = 0;\n    if(props.location || props.time){\n        showMoreLength = props.data.length - 3;\n    } else {\n        showMoreLength = props.data.length - 6;\n    }\n    return (\n        <div className=\"slider-container\">\n            <div className=\"title\">\n                <h2>{props.title}  \n                {\n                    props.location ? (<span className=\"city\">{props.location}</span>) : ''\n                }\n                {\n                    props.time ? ( <span className=\"city\">this weekend</span>) : ''\n                }\n                \n                </h2>\n            </div>\n            <div className=\"experience-container\">\n                {\n                   props.data.map((item, index) => {\n                       if(props.location){\n                            return index < 3 ? (<SliderItem data={item} key={index}></SliderItem>) : '';\n                       } else if(props.time) {\n                        return index < 3 ? (<SliderItem  data={item} key={index}></SliderItem>) : '';\n                       } else {\n                        return index < 6 ? (<SliderItem  data={item} key={index}></SliderItem>) : '';\n                       }\n                    })\n                }\n                \n            </div>\n            <div className=\"show-all-link\">Show all ({showMoreLength})</div>\n        </div>\n    );\n}\n\nexport default ExperienceSlider;","import React from 'react';\nimport './HomeSlider.scss';\n\nconst HomeSlider = (props) => {\n    return (\n        <div className=\"home-slider-container\">\n            <div className=\"heading\">\n                <p className=\"title\">Myscoopt Social Experiences</p>\n                <h1 className=\"desc\">Where making friends is as easy as showing up</h1>\n            </div>\n            {\n                props.data.map((item, index) => {\n                    if(index < 7){\n                        const classes = index === 0 ? 'first-item' : '';\n                        return (\n                            <div className={classes} key={index}>\n                                <img src={process.env.PUBLIC_URL + '/' + item.imgUrl} className=\"img\" alt={props.name}></img>\n                            </div>\n                        )\n                    }\n                })\n            }\n\n        </div>\n    );\n}\n\nexport default HomeSlider;","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport HowItWorks from './HowItWorks/HowItWorks';\nimport './Home.scss';\nimport DownloadLink from './DownloadLink/DownloadLink';\nimport ExperienceSlider from './ExperienceSlider/ExperienceSlider';\nimport HomeSlider from './HomeSlider/HomeSlider';\nimport {setExperienceData} from './../../store/action/partyAction';\n\nclass Home extends Component {\n    componentDidMount(){\n        this.props.setExperienceData()\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"slider\">\n                    <HomeSlider data={this.props.allExperience}></HomeSlider>\n                </div>\n                <HowItWorks></HowItWorks>\n                <ExperienceSlider title=\"Popular Experience in \" location=\"Gurgaon\"\n                 data={this.props.popularExperience}></ExperienceSlider>\n                <ExperienceSlider title=\"Recommended Experience for \" time=\"this weekend\"\n                data={this.props.recommendedExperience}></ExperienceSlider>\n                <ExperienceSlider title=\"Experience across India\"\n                data={this.props.allExperience}></ExperienceSlider>\n                <div className=\"learn-more\">\n                    <img src={process.env.PUBLIC_URL + '/banner1.jpeg'} className=\"img\"></img>\n                    <div className=\"info\">\n                        <p>Hosting with myscoot</p>\n                        <h3>It pays to make people happy. Become a host and start earning.</h3>\n                        <button type=\"button\" className=\"btn-learnmore\">Learn more</button>\n                    </div>\n                </div>\n                <DownloadLink></DownloadLink>\n            </div>\n        );\n    }\n}\n\nconst dispatchStateToProps = (state) => {\n    return {\n        allExperience: state.partyReducer.allExperience,\n        popularExperience: state.partyReducer.popularExperience,\n        recommendedExperience: state.partyReducer.recommendedExperience,\n    };\n}\nconst dispatchActionToProps = (dispatch) => {\n    return {\n        setExperienceData: () => dispatch(setExperienceData())\n    };\n}\n\nexport default connect(dispatchStateToProps, dispatchActionToProps)(Home);","import { SET_ALL_EXPERIENCE_DATA, SET_POPULAR_EXPERIENCE_DATA, SET_RECOMMENDED_EXPERIENCE_DATA } from \"src/store/actionConstant\";\nimport data from './../data.json';\nexport const setExperienceData = () => {\n    return (dispatch) => {\n       \n        const popularExperience = data.popularExperience;\n        const recommendedExperience = data.recommendedExperience;\n        const allData = popularExperience.concat(recommendedExperience);\n        dispatch({type: SET_ALL_EXPERIENCE_DATA, payload: allData});\n        dispatch({type: SET_POPULAR_EXPERIENCE_DATA, payload: popularExperience});\n        dispatch({type: SET_RECOMMENDED_EXPERIENCE_DATA, payload: recommendedExperience});\n    }\n}","export const SET_ALL_EXPERIENCE_DATA = 'SET_ALL_EXPERIENCE_DATA';\nexport const SET_POPULAR_EXPERIENCE_DATA = 'SET_POPULAR_EXPERIENCE_DATA';\nexport const SET_RECOMMENDED_EXPERIENCE_DATA = 'SET_RECOMMENDED_EXPERIENCE_DATA';","import React, {Component} from 'react';\nimport './App.scss';\nimport {Route} from 'react-router-dom';\nimport Header from './component/Header/Header';\nimport Footer from './component/Footer/Footer';\nimport Home from './component/Home/Home';\n\nclass App extends Component {\n  constructor(){\n    super();\n  }\n\n  render(){\n    return (\n      <React.Fragment>\n          <Header></Header>\n            <Route path='/' exact strict render={() => {\n                return (<Home/>)\n            }}/>\n           <Footer></Footer>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { SET_ALL_EXPERIENCE_DATA, SET_POPULAR_EXPERIENCE_DATA, SET_RECOMMENDED_EXPERIENCE_DATA } from \"src/store/actionConstant\";\nconst initialState = {\n    allExperience: [],\n    popularExperience: [],\n    recommendedExperience: []\n};\n\nconst partyReducer = (state =  initialState, action) => {\n    switch(action.type) {\n        case SET_ALL_EXPERIENCE_DATA:\n            return {\n                ...state,\n                allExperience: action.payload\n            }\n        case SET_POPULAR_EXPERIENCE_DATA: \n            return {\n                ...state,\n                popularExperience: action.payload\n            }\n        case SET_RECOMMENDED_EXPERIENCE_DATA: \n            return {\n                ...state,\n                recommendedExperience: action.payload\n            }\n        default:\n            return state;\n    }\n}\n\nexport default partyReducer;","import {combineReducers} from \"redux\";\nimport partyReducer from \"src/store/reducer/partyReducer\";\n\nconst rootReducer = combineReducers({\n    partyReducer: partyReducer\n});\n\nexport default rootReducer;","import {createStore, applyMiddleware} from \"redux\";\nimport thunk from \"redux-thunk\";\nimport {logger} from 'redux-logger';\nimport rootReducer from \"src/store/reducer\";\n\nconst configureStore = () => {\n    const store = createStore(rootReducer, applyMiddleware(thunk, logger));\n    return store;\n}\n\nexport default configureStore;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport configureStore from \"./store/configureStore\";\n\nReactDOM.render(<Provider store={configureStore()}><Router basename={process.env.PUBLIC_URL}><App  /></Router></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}